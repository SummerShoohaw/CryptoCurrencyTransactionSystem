/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NewUI.DisplayPanel;

import Business.EcoSystem;
import Business.Investor.Customer;
import Business.Network.Network;
import Business.Wallet.Wallet;
import java.awt.CardLayout;
import javax.swing.JPanel;

/**
 *
 * @author summershoohaw
 */
public class CustomerBalancePanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerBalancePanel
     */
    private Customer customer;
    private JPanel userProcessContainer;
    
    public CustomerBalancePanel(Customer c,JPanel userProcessContainer) {
        initComponents();
        customer = c;
        populateBox();
        this.userProcessContainer = userProcessContainer;
        balanceTxt.setEditable(false);
    }

    public void populateBox(){
        walletBox.removeAllItems();
        for(Network n:EcoSystem.getEcoSystem().getNetworkDirectory().getNetworkDirectory()){
            String coinType = n.getCoinType();
            Wallet w = EcoSystem.getEcoSystem().getWalletDirectory(coinType).searchWalletViaCustomer(customer);
            if(w != null)
                walletBox.addItem(coinType);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        walletBox = new javax.swing.JComboBox<>();
        checkBtn = new javax.swing.JButton();
        balanceTxt = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();

        walletBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        checkBtn.setText("Check CryptoCurrency balance");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(walletBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(balanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(walletBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBtn))
                .addGap(73, 73, 73)
                .addComponent(balanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(backBtn)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        String selectedType = (String)walletBox.getSelectedItem();
        double balance = customer.checkMyBalance(selectedType);
        balanceTxt.setText(String.valueOf(selectedType+" "+balance));
    }//GEN-LAST:event_checkBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField balanceTxt;
    private javax.swing.JButton checkBtn;
    private javax.swing.JComboBox<String> walletBox;
    // End of variables declaration//GEN-END:variables
}
